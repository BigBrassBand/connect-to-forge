Write a cli program in Typescript that will convert an Atlassian Connect descriptor into a forge manifest. This program should use the commander library for all command line argument parsing. For commander, be sure to import the program argument and to call program.parse(). This program should accumulate any warnings in a single buffer. If a 'fail on warning' flag is passed then instead of the program writing the forge manifest at the end it should instead print all of the warnings to the user and then ask if they wish to proceed with the manifest generation anyway despite the warnings. All questions asked to the user should use the inquirer library. This program should download the Atlassian connect descriptor, provided as a url via a required command line argument and convert that into the YAML based forge manifest. Another command line argument should ask if this is a jira of confluence app. By default, the output should be written to 'manifest.yml' in the current working directory but users should be able to configure the output location with a command line argument. The transformation process should take each of the 'modules' from the atlassian connect descriptor and directly translate them to the connectModules section in the forge manifest where the name of each module type is prefixed with 'jira:' or 'confluence:' based on the command line argument. The Atlassian Connect descriptor lifecycle top-level section should be converted into the connectModules.<app type>:lifecycle section in the forge manifest with an added 'key' property set to 'lifecycle-events'. If the connect descriptor has lifecycle events then the app.connect.authentication field should be set to 'jwt'. The modules.webhooks that were copied over from the Atlassian Connect file, if any were copied over, should have 'key' properties added to them with the string 'webhook-1','webhook-2','webhook-3' etc. In the forge manifest, create a top level remotes array with a single element that has a field called 'key' with the value 'connect' and another field called 'baseUrl' that has the value of the Atlassian Connect descriptors 'baseUrl' field. All values in the scopes move to permissions.scopes in the Forge manifest.yml, are lower-cased, with underscores converted to dashes, and with a suffix of either :connect-jira or :connect-confluence. It makes no difference which of the two is used. For example, the Connect READ scope becomes read:connect-jira or read:connect-confluence, and PROJECT_ADMIN becomes project-admin:connect-jira or project-admin:connect-confluence. If the ACT_AS_USER scope is present in the connect version of the app then this should be added as a warning and this scope not added to the forge manifest. The top level 'key' field of the Atlassian Connect descriptor should be copied to the app.connect.key field of the forge manifest. The app.connect.remote field should be set to 'remote' in the forge manifest. If the atlassian connect descriptor contains a top level 'translations' then output a warning that this is not supported yet in forge. Make sure that you generate typings for the Atlassian Connect descriptor and Forge Manifest based on the values that you can deduce from these descriptions; make the typings as comprehensive as possible.

After you output this program, explain which npm commands I should run and what I should add to my tsconfig.jso